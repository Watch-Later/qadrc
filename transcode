#!/bin/bash -efux

tmpdir=${TMPDIR:-/tmp}

av0=$(readlink -ev "$0")
av0dir=$(dirname "$av0")

# autodetect mono
mono=

# use deafult aac priming
priming=

# use dynamic range compression when appropriate
no_drc=

# seek and duration support
ff_ss= ff_to= ff_t=

# quality control
VBR= TVBR=

tc2ms()
{
	perl -le '
		@s = reverse split /:/, shift;
		$s = $s[0] + 60 * $s[1] + 3600 * $s[2];
		print int 0.5 + $s * 1000;
		' -- "$@"
}

ms2tc()
{
	perl -le "print $1 / 1000"
}

Transcode()
{
	local ms1 ms2 ms3
	# treat -ss 0 as no -ss
	if [ -n "$ff_ss" ]; then
		ms1=$(tc2ms "$ff_ss")
		[ $ms1 -gt 0 ] || ff_ss=
	fi
	# -t overrides -to
	if [ -n "$ff_t" ]; then
		if [ -z "$ff_ss" ]; then
			ff_to=$ff_t
		else
			ms1=$(tc2ms "$ff_ss")
			ms2=$(tc2ms "$ff_t")
			ms3=$(($ms1+$ms2))
			ff_to=$(ms2tc $ms3)
		fi
	elif [ -n "$ff_to" ]; then
		if [ -z "$ff_ss" ]; then
			ff_t=$ff_to
		else
			ms1=$(tc2ms "$ff_ss")
			ms2=$(tc2ms "$ff_to")
			ms3=$(($ms2-$ms1))
			ff_t=$(ms2tc $ms3)
		fi
	fi

	local ff_decode_pre=
	if [[ $1 = *.[Mm][Pp]3 ]]; then
		ff_decode_pre='-acodec mp3float'
	fi

	ffmpeg $ff_decode_pre ${ff_ss:+-ss $ff_ss} -i "$1" ${ff_t:+-t $ff_t} -vn \
		-af replaygain,ebur128=framelog=verbose,pan='mono|c0=0.5*c0+-0.5*c1',replaygain=percent=99 \
		-f null - >$tmpdir/gain$$.log 2>&1 || { grep -i error $tmpdir/gain$$.log; false; }

	local vars
	vars=$($av0dir/aacgain15pp <$tmpdir/gain$$.log)
	local $vars

	local vbr=4 tvbr=82
	[ ${g0brate:?} -lt 180 ] || vbr=3 tvbr=91

	local codec=${g0codec:?}
	local format=${g0format:?}

	local qa_can_decode=1
	if [ $codec = ac3 ]; then
		qa_can_decode=
	fi
	if [ $codec = mp2 ]; then
		qa_can_decode=
		ff_decode_pre='-acodec mp2float'
	fi
	if [ $codec = mp3 ]; then
		ff_decode_pre='-acodec mp3float'
	fi
	if [ $format = matroska ] || [ $format = flv ]; then
		qa_can_decode=
	fi

	local ff_ssto="${ff_ss:+    -ss $ff_ss} ${ff_to:+  -to $ff_to}"
	local qa_ssto="${ff_ss:+--start $ff_ss} ${ff_to:+--end $ff_to}"

	local arg1="$1" arg2="$2"

	case $mono in
		no) mono= ;;
		'') mono=$(perl -e "print 1 if ${g2db1:?} - ${g1db:?} > 20") ;;
	esac

	mono=${mono:+--matrix-file=$tmpdir/mono.matrix}
	echo '1 1' >$tmpdir/mono.matrix

	# ff1dec applies ssto, mono, and possibly gain
	ff1dec()
	{
		local af=${mono:+pan='mono|c0=0.5*c0+0.5*c1'${1:+,}}${1:+volume=${1#*=}dB}
		ffmpeg -loglevel error $ff_decode_pre -i "$arg1" $ff_ssto ${af:+-af $af} -acodec pcm_f32le -f wav -
	}

	local gain=

	qa1enc()
	{
		if [ -n "$qa_can_decode" ]; then
			qaac -o "$arg2" $qa_ssto $mono $gain "$@" "$arg1"
		else
			ff1dec |
			qaac -o "$arg2"                $gain "$@" -
		fi
	}

	qa1dec()
	{
		if [ -n "$qa_can_decode" ]; then
			qaac --silent --decode -o - $qa_ssto $mono $gain "$@" "$arg1"
		elif [ -z "$*" ]; then
			ff1dec $gain
		else
			ff1dec |
			qaac --silent --decode -o /dev/fd/3        $gain "$@" - 3>&1 1>&2
		fi
	}

	ff1enc()
	{
		if [ -n "$*" ]; then
			qa1dec "$@" |
			lame -V${VBR:-$vbr} /dev/stdin "$arg2"
			return
		fi
		set -- $gain
		local af=${mono:+pan='mono|c0=0.5*c0+0.5*c1'${1:+,}}${1:+volume=${1#*=}dB}
		ffmpeg $ff_decode_pre -i "$arg1" $ff_ssto ${af:+-af $af} -aq ${VBR:-$vbr} -y "$arg2"
	}

	local drc=
	if [ -z "$no_drc" ] && [ "${g1range%.*}" -ge 10 ]; then
		vars=$(perl -le '
			use v5.12;
			my $range = shift;
			my $dbleft = shift;
			my $ratio  = 0 + sprintf "%.2f", $range / (9.9 + ($range - 9.9) / 3);
			my $thresh = 0 + sprintf "%.1f", -15 - $range - $dbleft;
			my $knee   = 0 + sprintf "%.1f", 2 * ($range + 10);
			say "ratio=$ratio thresh=$thresh knee=$knee";
			' -- $g1range $g1db)
		local $vars
		drc="--drc $thresh:$ratio:$knee:20:800"

		set -o pipefail
		qa1dec $drc |
		ffmpeg	-i - -vn -af replaygain,ebur128=framelog=verbose \
			-f null - >$tmpdir/gain$$.log 2>&1 || { grep -i error $tmpdir/gain$$.log; false; }
		set +o pipefail

		vars=$($av0dir/aacgain15pp <$tmpdir/gain$$.log)
		local $vars
	fi

	rm $tmpdir/gain$$.log

	gain=${g1db:?}

	local limiter
	limiter=$(perl -le "print 1 if ${g1peak:?} + $gain > -0.071")
	limiter=${limiter:+--limiter}

	[ "$gain" != 0 ] || gain=
	gain=${gain:+--gain=$gain}

	set -o pipefail
	if [[ $2 != *.[Mm][Pp]3 ]]; then
		adts=
		[[ $2 != *.[Aa][Aa][Cc] ]] || adts='--adts'
		priming=${priming:+--num-priming=$priming}
		qa1enc $drc $limiter $priming $adts --tvbr=${TVBR:-$tvbr}
	else
		ff1enc $drc $limiter
	fi
	set +o pipefail
}

argv=$(getopt -n "${0##*/}" -o t:V: -al mono,stereo,no-drc,priming:,ss:,to:,tvbr: -- "$@")
eval set -- "$argv"
while :; do
	case "$1" in
		--mono) mono=yes; shift ;;
		--stereo) mono=no; shift ;;
		--no-drc) no_drc=1; shift ;;
		--priming) priming=${2:?}; shift 2 ;;
		--ss) ff_ss=${2:?}; shift 2 ;;
		--to) ff_to=${2:?}; shift 2 ;;
		-t) ff_t=${2:?}; shift 2 ;;
		-V) VBR=${2:?}; shift 2 ;;
		--tvbr) TVBR=${2:?}; shift 2 ;;
		--) shift; break ;;
		*) echo >&2 "unrecognized option: $1"; false ;;
	esac
done

Transcode "$1" "${2:-${1%.*}.mp3}"
