#!/bin/bash -efux
#
# transcode - transcode radio programs for portable use
#
# Written by Alexey Tourbin.
# This file is distributed as Public Domain.

tmpdir=${TMPDIR:-/tmp}

av0=$(readlink -ev "$0")
av0dir=$(dirname "$av0")

# autodetect mono
mono=

# use deafult aac priming
priming=

# use dynamic range compression when appropriate
no_drc=

# compress towards this dynamic range
drc_range=10dB

. $av0dir/calc.sh
. $av0dir/dualmono.sh

# seek and duration support
. $av0dir/ffseek.sh

# predefined album gain
gain=

# quality control
VBR= TVBR=

Transcode()
{
	ffseek

	. $av0dir/mono.sh

	case $mono in
		no) ismono=$(Calc "${ismono:?} >= 2 ? $ismono : 0") ;;
		yes) ismono=9 ;;
	esac

	local vbr=4 tvbr=82
	[ ${g0brate:?} -lt 180 ] || vbr=3 tvbr=91

	if [ ${ismono:?} -ge 2 ]; then
		vbr=4
	else
		ismono=0
		monoparts=$($av0dir/monoparts --gain=$g1db ${ff_ss:+-ss $ff_ss} <$tmpdir/gain$$.log)
		if [ "$monoparts" = 'all-mono' ]; then
			ismono=9 vbr=4
		elif [ -n "$monoparts" ]; then
			local dura durap
			dura=$(tc2ms ${g0dura:?})
			durap=$(Calc "-(${monoparts//,/+})*100")
			if Cond "$durap > 0.75 * $dura"; then
				vbr=4
			fi
		fi
	fi

	if [[ $VBR$vbr = 3 && $2 = *.[Mm][Pp]3 ]]; then
		vbr=3$(zenity --title VBR \
			--text $'Select VBR for\n'"$2" \
			--column VBR --list V4 V3) ||:
		vbr=${vbr#3V}
	fi

	# -af chain
	local AF=${downmix:+$downmix,}

	if [ ${ismono:?} -gt 0 ]; then
		if [ ${g0ch:?} -gt 1 ]; then
			: ${c0afm:='pan=1c|c0=0.5*c0+0.5*c1'}
			AF=${AF:+$AF,}${c0afm:?}
		fi
	else
		if [ ${c0db:?} != 0 ]; then
			AF=${AF:+$AF,}${c0afs:?}
		fi
		if [ -n "$monoparts" ]; then
			AF=${AF:+$AF,}monoparts=${monoparts//,/|}
		fi
	fi

	local drc=
	if [ -z "$no_drc" ] && [ ${g1range%.*} -gt ${drc_range%dB} ]; then
		vars=$(perl -le '
			use v5.12;
			my $range  = shift;
			my $rlow   = shift;
			my $target = shift;
			my $ratio  = 0 + sprintf "%.2f", $range / ($target + ($range - $target) / 3);
			my $thresh = 0 + sprintf "%.0f", $rlow;
			my $knee   = 0 + sprintf "%.0f", 2 * $range;
			say "ratio=$ratio thresh=$thresh knee=$knee";
			' -- $g1range $g1rlow $drc_range)
		local $vars
		qadrc="$(($thresh+2)):$ratio:$knee"
		mydrc="$(($thresh-1)):$ratio:$knee"
		drc="asplit[i1][i2];[i1]qadrc=$qadrc[o1];[i2]mydrc=$mydrc[o2];[o1][o2]amix"
		AF=${AF:+$AF,}$drc

		ffmpeg $ff_decode_pre ${ff_ss:+-ss $ff_ss} -i "$1" ${ff_t:+-t $ff_t} -vn \
			-af "$AF",replaygain,ebur128=framelog=verbose \
			-f null - >$tmpdir/gain$$.log 2>&1 || { grep -i error $tmpdir/gain$$.log; false; }

		vars=$($av0dir/aacgain15pp <$tmpdir/gain$$.log)
		local $vars
		if [ ${g0ch:?} = 1 ]; then
			DualMono rg1
			DualMono eb1
		fi
		g1db=$(Calc2f "(${rg1gain:?} + ${eb1gain:?}) / 2")
		g1peak=$rg1peak g1range=$eb1range g1rlow=$eb1rlow
	fi

	if [ ${g1db:?} != 0 ]; then
		AF=${AF:+$AF,}volume=${g1db}dB
	fi

	local limiter
	limiter=$(perl -le "print 1 if ${g1peak:?} + $g1db > -0.071")
	if [ -n "$limiter" ]; then
		AF=${AF:+$AF,}qalimiter
	fi

	if [[ $2 = *.[Mm][Pp]3 ]]; then
		ffmpeg $ff_decode_pre -i "$1" ${ff_ss:+-ss $ff_ss} ${ff_t:+-t $ff_t} -vn \
			${AF:+-af "$AF"} -aq ${VBR:-$vbr} -y "$2"
	else
		adts=
		[[ $2 != *.[Aa][Aa][Cc] ]] || adts='--adts'
		priming=${priming:+--num-priming=$priming}
		set -o pipefail
		ffmpeg $ff_decode_pre ${ff_ss:+-ss $ff_ss} -i "$1" ${ff_t:+-t $ff_t} -vn \
			${AF:+-af "$AF"} -acodec pcm_f32le -f wav - |
		qaac -o "$2" $priming $adts --tvbr=${TVBR:-$tvbr} -
		set +o pipefail
	fi

	rm $tmpdir/gain$$.log
}

argv=$(getopt -n "${0##*/}" -o t:V: -al mono,stereo,no-drc,drc-range:,priming:,ss:,to:,tvbr: -- "$@")
eval set -- "$argv"
while :; do
	case "$1" in
		--mono) mono=yes; shift ;;
		--stereo) mono=no; shift ;;
		--no-drc) no_drc=1; shift ;;
		--drc-range) drc_range=${2:?}; shift 2;;
		--priming) priming=${2:?}; shift 2 ;;
		--ss) ff_ss=${2:?}; shift 2 ;;
		--to) ff_to=${2:?}; shift 2 ;;
		-t) ff_t=${2:?}; shift 2 ;;
		-V) VBR=${2:?}; shift 2 ;;
		--tvbr) TVBR=${2:?}; shift 2 ;;
		--) shift; break ;;
		*) echo >&2 "unrecognized option: $1"; false ;;
	esac
done

Transcode "$1" "${2:-${1%.*}.mp3}"
