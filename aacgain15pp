#!/usr/bin/perl -n
#
# aacgain15pp - post-process ffmpeg output
#
# Written by Alexey Tourbin.
# This file is distributed as Public Domain.

use v5.12;

our $P;
INIT {
	$P = shift;
}

our $B;
if (/^Input #/../^Output #/ and /^\s*Duration: .*(, bitrate.+)/) {
	$B = $1;
}

our %A;
if (/^Input #/../^Output #/ and s/^\s*Stream #(\d[:.]\d)\b[^:]*: Audio: //) {
	$A{$1} = $_ . $B;
	undef $B;
}

if (/^Input #0, (\w+)/) {
	say "${P}g0format=$1";
}

our $ch;
if (/^Stream mapping/../^Press/ and /^\s*Stream #(\d[:.]\d) -> /) {
	local $_ = $A{$1};
	say "${P}g0codec=$1" if /(\w+)/;
	say "${P}g0srate=$1" if /\b([1-9]\d{4}) Hz\b/;
	say "${P}g0brate=$1" if /\b([1-9]\d{1,3}) kb/;
	$ch =  1 if /\bmono\b/;
	$ch =  2 if /\bstereo\b/;
	$ch =  5 if /, 5\.1\b/;
	$ch = $1 if /\b(\d) channel/;
	say "${P}g0ch=$ch";
}

our @rg;
if (/^\[Parsed_replaygain_(\d+) /) {
	my $i = 0 + $1;
	if (/ track_gain = (\S+)/) {
		$rg[$i]{gain} = 0 + $1;
	}
	elsif (/ track_peak = (\S+)/) {
		my $f = (0 + $1) || 1e-5;
		my $db = 20 * log($f) / log(10);
		$db = 0 + sprintf "%.2f", $db;
		$rg[$i]{peak} = $db;
	}
}

our @eb;
our $ebi;
if (/^\[Parsed_ebur128_(\d+) .* Summary:/) {
	$ebi = 0 + $1;
}
elsif (defined $ebi) {
	if (/^ +I: +(?=.*LUFS)(\S+)/) {
		my $db = -18 - $1;
		$db = 0 + sprintf "%.2f", $db;
		$eb[$ebi]{gain} = $db;
	}
	elsif (/^ +LRA: +(\S+)/) {
		$eb[$ebi]{range} = 0 + $1;
	}
	elsif (/^ +LRA low: +(\S+)/) {
		$eb[$ebi]{rlow} = 0 + $1;
	}
}

our @vd;
if (/^\[Parsed_volumedetect_(\d+) /) {
	my $i = 0 + $1;
	if (/ max_volume: (\S+) /) {
		$vd[$i]{peak} = 0 + $1;
	}
	elsif (/ mean_volume: (\S+) /) {
		$vd[$i]{mean} = 0 + $1;
	}
	elsif (/ histogram_(\d+)db: /) {
		$vd[$i]{q999} = 0 - $1;
	}
}

sub Print ($+@) {
	my $p = shift;
	my $v = shift;
	my @v = grep { $_ } @$v;
	unshift @v, 0;
	for my $i (1 .. $#v) {
		say "$P$p$i$_=$v[$i]{$_}" for @_;
	}
}

END {
	Print rg => @rg, qw(gain peak);
	Print eb => @eb, qw(gain range rlow);
	Print vd => @vd, qw(peak mean q999);
}
