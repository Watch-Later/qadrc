#!/usr/bin/perl -n
use v5.12;

our $B;
if (/^Input #/../^Output #/ and /^\s*Duration: .*(, bitrate.+)/) {
	$B = $1;
}

our %A;
if (/^Input #/../^Output #/ and s/^\s*Stream #(\d[:.]\d)(?:\([^)]+\))?: Audio: //) {
	$A{$1} = $_ . $B;
	undef $B;
}

if (/^Input #0, (\w+)/) {
	say "g0format=$1";
}

our $ch;
if (/^Stream mapping/../^Press/ and /^\s*Stream #(\d[:.]\d) -> /) {
	local $_ = $A{$1};
	say "g0codec=$1" if /(\w+)/;
	say "g0srate=$1" if /\b([1-9]\d{4}) Hz\b/;
	say "g0brate=$1" if /\b([1-9]\d{1,3}) kb/;
	$ch =  1 if /\bmono\b/;
	$ch =  2 if /\bstereo\b/;
	$ch = $1 if /\b(\d) channel/;
	say "g0ch=$ch";
}

our @db1;
if (/replaygain.* track_gain = (\S+)/) {
	my $db = 0 + $1;
	$db -= 3.01 unless $ch == 2 and not @db1;
	$db = 0 + sprintf "%.2f", $db;
	push @db1, $db;
	my $n = @db1;
	say "g${n}db1=$db1[-1]";
}

our @peak;
if (/replaygain.* track_peak = (\S+)/) {
	my $f = 0 + $1;
	my $db = 20 * log($f) / log(10);
	$db += 3.01 unless $ch == 2 and not @peak;
	$db = 0 + sprintf "%.2f", $db;
	push @peak, $db;
	my $n = @peak;
	say "g${n}peak=$peak[-1]";
}

our @db2;
if (/^ +I: +(?=.*LUFS)(\S+)/) {
	my $db = 0 + $1;
	$db = -18 - $db;
	$db -= 3.01 unless $ch == 2 and not @db2;
	$db = 0 + sprintf "%.2f", $db;
	push @db2, $db;
	my $n = @db2;
	say "g${n}db2=$db2[-1]";
}

our @range;
if (/^ +LRA: +(\S+)/) {
	push @range, 0 + $1;
	my $n = @range;
	say "g${n}range=$range[-1]";
}

use POSIX qw(floor);

END {
	for my $i (0 .. $#db1) {
		last if $i > $#db2;
		my $db = ($db1[$i] + $db2[$i]) / 2;
		my $n = $i + 1;
		my $igain = floor 0.5 + $db / (5 * log(2) / log(10));
		my $igain2db = $igain * (5 * log(2) / log(10));
		my $dbleft = 0 + sprintf "%.2f", $db - $igain2db;
		$db = 0 + sprintf "%.2f", $db;
		say "g${n}db=$db";
		say "g${n}igain=$igain";
		say "g${n}dbleft=$dbleft";
	}
}
