#!/bin/bash -efu

tmpdir=${TMPDIR:-/tmp}
dry_run=

AACGain15()
{
	local db1 db2 ainfo mono range vars
	ffmpeg -i "$1" -af replaygain,ebur128=framelog=verbose -f null - >$tmpdir/gain.log 2>&1 ||
		{ tail $tmpdir/gain.log; false; }
	ainfo=$(grep -m1 Audio: $tmpdir/gain.log)
	mono=$(grep -c ' mono,\| 1 channel' <<<"$ainfo" || [ $? = 1 ])
	db1=$(perl -lne 's/.* track_gain = // and print 0+$_ and exit' $tmpdir/gain.log)
	db2=$(perl -lne 's/^ +I: +(?=.*LUFS)// and print 0+$_ and exit' $tmpdir/gain.log)
	range=$(perl -lne 's/^ +LRA: +// and print 0+$_ and exit' $tmpdir/gain.log)
	vars=$(perl -e '
		use v5.12;
		use POSIX qw(floor);
		my $db1 = shift;
		my $db2 = shift;
		$db2 = -18 - $db2;
		my $mono = shift;
		$db1 -= 3.01 if $mono;
		$db2 -= 3.01 if $mono;
		$db1 = 0 + sprintf "%.2f", $db1;
		$db2 = 0 + sprintf "%.2f", $db2;
		my $db = ($db1 + $db2) / 2;
		say "db1=$db1 db2=$db2 db=", 0 + sprintf "%.2f", $db;
		my $gain = $db / (5 * log(2) / log(10));
		my $igain = floor(0.5 + $gain);
		my $igain2db = $igain * (5 * log(2) / log(10));
		my $dbleft = 0 + sprintf "%.2f", $db - $igain2db;
		say "igain=$igain dbleft=$dbleft";
		' -- ${db1:?} ${db2:?} ${mono:?} )
	local $vars
	echo $vars range=${range:?}
	[ ${igain:?} = 0 ] ||
	[ -n "$dry_run" ] ||
	aacgain -g "$igain" "$1" >&2
}

if [ "${1-}" = "-n" ]; then
	dry_run=1
	shift
fi

for f; do
	AACGain15 "$f"
done
