#!/bin/bash -efu
#
# aacgain15 - normalize audio volume to the average of ReplayGain 1.0 and 2.0
#
# Written by Alexey Tourbin.
# This file is distributed as Public Domain.

av0=$(readlink -ev "$0")
av0dir=$(dirname "$av0")

. $av0dir/calc.sh
. $av0dir/dualmono.sh

tmpdir=${TMPDIR:-/tmp}
dry_run=
noclip=

AACGain15()
{
	local ff_decode_pre=
	if [[ $1 = *.[Mm][Pp]3 ]]; then
		ff_decode_pre='-acodec mp3float'
	fi
	ffmpeg $ff_decode_pre -i "$1" -vn -af replaygain,ebur128=framelog=verbose \
		-f null - >$tmpdir/gain$$.log 2>&1 || { grep -i error $tmpdir/gain$$.log; false; }
	local vars
	vars=$($av0dir/aacgain15pp <$tmpdir/gain$$.log)
	local $vars
	if [ ${g0ch:?} = 1 ]; then
		DualMono rg1
		DualMono eb1
	fi
	vars=$(perl -e 'use v5.12;
		my $db1 = shift;
		my $db2 = shift;
		my $peak = shift;
		my $db = ($db1 + $db2) / 2;
		use POSIX qw(floor);
		my $igain = floor 0.5 + $db / (5 * log(2) / log(10));
		my $igain2db = $igain * (5 * log(2) / log(10));
		my $igaink = $igain;
		my $igaink2db = $igain2db;
		while ($peak + $igaink2db > 0.001) {
			$igaink--;
			$igaink2db = $igaink * (5 * log(2) / log(10));
		}
		my $dbleft  = 0 + sprintf "%.2f", $db - $igain2db;
		my $dbleftk = 0 + sprintf "%.2f", $db - $igaink2db;
		$db = 0 + sprintf "%.2f", $db;
		say "g1db=$db";
		say "g1igain=$igain";
		say "g1igaink=$igaink";
		say "g1dbleft=$dbleft";
		say "g1dbleftk=$dbleftk";
		' -- ${rg1gain:?} ${eb1gain:?} ${rg1peak:?})
	local $vars
	echo rg1gain=$rg1gain eb1gain=$eb1gain g1db=$g1db eb1range=$eb1range eb1rlow=$eb1rlow rg1peak=$rg1peak
	echo g1igain=$g1igain g1igaink=$g1igaink g1dbleft=$g1dbleft g1dbleftk=$g1dbleftk
	local igain=${g1igain:?}
	[ -z "$noclip" ] || igain=${g1igaink:?}
	[ "$igain" = 0 ] || [ -n "$dry_run" ] ||
	aacgain -g "$igain" -s s "$1" >&2
	rm $tmpdir/gain$$.log
}

if [ "${1-}" = "-n" ]; then
	dry_run=1
	shift
fi

if [ "${1-}" = "-k" ]; then
	noclip=1
	shift
fi

for f; do
	AACGain15 "$f"
done
